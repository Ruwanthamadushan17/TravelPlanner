services:
  api:
    build:
      context: .
      dockerfile: TravelPlanner.Api/Dockerfile
    ports: ["8080:8080"]
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./TravelPlanner.Api/secrets.development.json:/app/secrets.development.json:ro
    restart: unless-stopped
    depends_on:
      sql:
        condition: service_healthy

  sql:
    image: mcr.microsoft.com/azure-sql-edge:latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports: ["127.0.0.1:11433:1433"]
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $$MSSQL_SA_PASSWORD -Q 'SELECT 1' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 24
    volumes:
      - mssqldata:/var/opt/mssql
    restart: unless-stopped
volumes:
  mssqldata:
